// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id         Int      @id @default(autoincrement())
  title      String
  content    String?
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])
  createdAt  DateTime @default(now())
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique
  posts Post[]
}

//
model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String    @unique
  password      String?
  image         String?
  role          String    @default("member") // Add a role field
  emailVerified DateTime? // เก็บ DateTime ของ email ที่ทำการ verified
  accounts      Account[] // ผูก User เข้ากับ Account(Provider) เพื่อบอกว่า ผู้ใช้หนึ่งคนสามารถมีหลายบัญชีที่เชื่อมโยงกับบัญชีนั้น (เช่น บัญชีของผู้ใช้ในระบบ OAuth ต่าง ๆ เช่น Google, Facebook, ฯลฯ)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}
